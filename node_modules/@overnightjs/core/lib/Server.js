"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var express = require("express");
var express_1 = require("express");
var Server = (function () {
    function Server() {
        this._APP = express();
    }
    Object.defineProperty(Server.prototype, "app", {
        get: function () {
            return this._APP;
        },
        enumerable: true,
        configurable: true
    });
    Server.prototype.addControllers = function (controllers, customRouterLib) {
        var _this = this;
        var ctlrInstances = [];
        if (controllers instanceof Array) {
            ctlrInstances = controllers;
        }
        else {
            ctlrInstances.push(controllers);
        }
        var count = 0;
        var routerLib = customRouterLib || express_1.Router;
        ctlrInstances.forEach(function (controller) {
            if (controller && controller.controllerBasePath) {
                var router = _this._getRouter(controller, routerLib);
                _this.app.use(controller.controllerBasePath, router);
                count++;
            }
        });
        var s = count === 1 ? '' : 's';
        console.log(count + (" controller" + s + " configured."));
    };
    Server.prototype._getRouter = function (controller, RouterLib) {
        var router = RouterLib();
        var _loop_1 = function (member) {
            var route = (controller)[member];
            if (route && route.overnightRouteProperties) {
                var _a = route.overnightRouteProperties, middleware = _a.middleware, httpVerb = _a.httpVerb, path = _a.path;
                var callBack = function (req, res, next) {
                    return (controller)[member](req, res, next);
                };
                if (middleware) {
                    router[httpVerb](path, middleware, callBack);
                }
                else {
                    router[httpVerb](path, callBack);
                }
            }
        };
        for (var member in controller) {
            _loop_1(member);
        }
        return router;
    };
    return Server;
}());
exports.Server = Server;
//# sourceMappingURL=Server.js.map